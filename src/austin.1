.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.1.
.TH AUSTIN "1" "November 2022" "austin 3.5.0" "User Commands"
.SH NAME
austin \- Frame stack sampler for CPython
.SH SYNOPSIS
.B austin
[\fI\,OPTION\/\fR...] \fI\,command \/\fR[\fI\,ARG\/\fR...]
.SH DESCRIPTION
Austin is a frame stack sampler for CPython that is used to extract profiling
data out of a running Python process (and all its children, if required) that
requires no instrumentation and has practically no impact on the tracee.
.TP
\fB\-b\fR, \fB\-\-binary\fR
Emit data in the MOJO binary format. See
https://github.com/P403n1x87/austin/wiki/The\-MOJO\-file\-format
for more details.
.TP
\fB\-C\fR, \fB\-\-children\fR
Attach to child processes.
.TP
\fB\-e\fR, \fB\-\-exclude\-empty\fR
Do not output samples of threads with no frame
stacks.
.TP
\fB\-f\fR, \fB\-\-full\fR
Produce the full set of metrics (time +mem \fB\-mem\fR).
.TP
\fB\-g\fR, \fB\-\-gc\fR
Sample the garbage collector state.
.TP
\fB\-h\fR, \fB\-\-heap\fR=\fI\,n_mb\/\fR
Maximum heap size to allocate to increase sampling
accuracy, in MB (default is 0).
.TP
\fB\-i\fR, \fB\-\-interval\fR=\fI\,n_us\/\fR
Sampling interval in microseconds (default is
100). Accepted units: s, ms, us.
.TP
\fB\-m\fR, \fB\-\-memory\fR
Profile memory usage.
.TP
\fB\-o\fR, \fB\-\-output\fR=\fI\,FILE\/\fR
Specify an output file for the collected samples.
.TP
\fB\-p\fR, \fB\-\-pid\fR=\fI\,PID\/\fR
Attach to the process with the given PID.
.TP
\fB\-P\fR, \fB\-\-pipe\fR
Pipe mode. Use when piping Austin output.
.TP
\fB\-s\fR, \fB\-\-sleepless\fR
Suppress idle samples to estimate CPU time.
.TP
\fB\-t\fR, \fB\-\-timeout\fR=\fI\,n_ms\/\fR
Start up wait time in milliseconds (default is
100). Accepted units: s, ms.
.TP
\fB\-w\fR, \fB\-\-where\fR=\fI\,PID\/\fR
Dump the stacks of all the threads within the
process with the given PID.
.TP
\fB\-x\fR, \fB\-\-exposure\fR=\fI\,n_sec\/\fR
Sample for n_sec seconds only.
.TP
\-?, \fB\-\-help\fR
Give this help list
.TP
\fB\-\-usage\fR
Give a short usage message
.TP
\fB\-V\fR, \fB\-\-version\fR
Print program version
.PP
Mandatory or optional arguments to long options are also mandatory or optional
for any corresponding short options.
.SH EXAMPLES
.PP
Profile wall time of a Python script
.PP
.RS
$ austin python3 \fI\,myscript.py\fR
.RE
.PP
Profile CPU time of an executable Python script
.PP
.RS
$ austin -s \fI\,./myscript.py\/\fR
.RE
.PP
Profile a Python application
.PP
.RS
$ austin \fI\,uwsgi\fR --http :9090 --wsgi-file foobar.py
.RE
.PP
Profile child processes
.PP
.RS
$ austin \fI\,-C\fR uwsgi --http :9090 --wsgi-file foobar.py
.RE
.PP
Attach to a running Python process
.PP
.RS
# austin -p \fI\,<pid>\fR
.RE
.PP
Attach to a process and its children
.PP
.RS
# austin -Cp \fI\,<pid>\fR
.RE
.PP
Where is a Python process at?
.PP
.RS
# austin -w \fI\,<pid>\fR
.RE
.PP
Set the sampling interval
.PP
.RS
# austin -i \fI\,10ms\fR -p <pid>
.RE
.PP
Save collected on-CPU samples to file
.PP
.RS
$ austin -so \fI/path/to/file.austin\fR ./myscript.py
.RE
.PP
Sample for 5 seconds only
.PP
.RS
# austin -x \fI5\fR -p <pid>
.RE
.SH "REPORTING BUGS"
Report bugs to <https://github.com/P403n1x87/austin/issues>.
.SH "SEE ALSO"
The full documentation for
.B austin
is maintained as a Texinfo manual.  If the
.B info
and
.B austin
programs are properly installed at your site, the command
.IP
.B info austin
.PP
should give you access to the complete manual.
